{"ast":null,"code":"var _jsxFileName = \"/Users/sai/Downloads/React/ReactPractice/scrum-report-app/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport TaskList from './TaskList';\nimport { useNavigate } from 'react-router-dom';\nimport MenuBar from './MenuBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:3000/api/tasks', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n        if (error.response && error.response.status === 401) {\n          navigate('/');\n        }\n      }\n    };\n    fetchTasks();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks available. Please create a new task.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/add-task'),\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"mP0t/edHjXqSrQwGHZvoFmDCs3M=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","TaskList","useNavigate","MenuBar","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","navigate","fetchTasks","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","status","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","_c","$RefreshReg$"],"sources":["/Users/sai/Downloads/React/ReactPractice/scrum-report-app/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport TaskList from './TaskList';\nimport { useNavigate } from 'react-router-dom';\nimport MenuBar from './MenuBar';\n\nconst Dashboard = () => {\n  const [tasks, setTasks] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:3000/api/tasks', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n        if (error.response && error.response.status === 401) {\n          navigate('/');\n        }\n      }\n    };\n    fetchTasks();\n  }, [navigate]);\n\n  return (\n    <div>\n      <MenuBar />\n      <h2>Dashboard</h2>\n      {tasks.length === 0 ? (\n        <div>\n          <p>No tasks available. Please create a new task.</p>\n          <button onClick={() => navigate('/add-task')}>Create New Task</button>\n        </div>\n      ) : (\n        <TaskList tasks={tasks} />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,iCAAiC,EAAE;UAClEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK;UAChC;QACF,CAAC,CAAC;QACFH,QAAQ,CAACM,QAAQ,CAACI,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7C,IAAIA,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACL,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;UACnDZ,QAAQ,CAAC,GAAG,CAAC;QACf;MACF;IACF,CAAC;IACDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACF,OAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXtB,OAAA;MAAAkB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBnB,KAAK,CAACoB,MAAM,KAAK,CAAC,gBACjBvB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAG;MAA6C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACpDtB,OAAA;QAAQwB,OAAO,EAAEA,CAAA,KAAMnB,QAAQ,CAAC,WAAW,CAAE;QAAAa,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC,gBAENtB,OAAA,CAACJ,QAAQ;MAACO,KAAK,EAAEA;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CAtCID,SAAS;EAAA,QAEIJ,WAAW;AAAA;AAAA4B,EAAA,GAFxBxB,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}